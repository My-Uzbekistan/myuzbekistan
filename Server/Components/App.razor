@using ActualLab.Fusion.Authentication
@using ActualLab.Fusion.Extensions
@using Client.Core.Services
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Options
@using Server;
@using ActualLab.Fusion.Blazor
@using ActualLab.Fusion.Server.Authentication
@using ActualLab.Fusion.Server.Controllers
@using System.Globalization;
@inject ServerAuthHelper _serverAuthHelper
@inject IAuth _auth
@inject ISandboxedKeyValueStore store
@inject BlazorCircuitContext _blazorCircuitContext
@inject IHttpContextAccessor contextAccessor
@inject LayoutService LayoutService


<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name.Split("-").FirstOrDefault("en")">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <ImportMap />
    <link href="css/app.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <script src="_content/ActualLab.Fusion.Blazor.Authentication/scripts/fusionAuth.js"></script>

    @*----leaflet----*@
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>

    <script src="https://unpkg.com/esri-leaflet@2.2.3/dist/esri-leaflet.js"></script>

    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.css" />
    <script src="/js/leaflet-routing-machine.js"></script>

    <link rel="stylesheet" href="https://unpkg.com/esri-leaflet-geocoder@2.2.13/dist/esri-leaflet-geocoder.css">
    <script src="/js/esri-leaflet-geocoder.js"></script>
    <script src="/js/leafletBlazorInterops.js"></script>

    @*----end leaflet -----*@

    <script src="/js/file-saver.js"></script>


    <script>
        window.blazorCulture = {
        get: () => window.localStorage['BlazorCulture'],
        set: (value) => window.localStorage['BlazorCulture'] = value
        };
        window.BlazorHelpers = {
        RedirectTo: function (path) {
        window.location = path;
        }
        };
    </script>
    <HeadOutlet @rendermode="RenderModeForPage" />
</head>

<body>
    @{
        var sessionId = _serverAuthHelper.Session.Id;
    }

    <Routes SessionId="@sessionId" @rendermode="RenderModeForPage" IsDark="@theme" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src=@Assets["_content/Extensions.MudBlazor.StaticInput/NavigationObserver.js"]></script>
</body>
</html>

@code {
    bool theme;
    string? closeWindowFlowName { get; set; }
    User? user { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/Account")
        ? null
        : InteractiveServer;
    

    protected override async Task OnInitializedAsync()
    {
        HttpContext = contextAccessor.HttpContext!;
        await _serverAuthHelper.UpdateAuthState(contextAccessor.HttpContext!);
        user = await _auth.GetUser(_serverAuthHelper.Session)!;
        if (user != null)
        {
            bool.TryParse(await store.Get(_serverAuthHelper.Session, $"@user/{user.Id}/theme"), out theme);
        }
        LayoutService.IsDarkMode = theme;
        this.closeWindowFlowName = closeWindowFlowName;
        await base.OnInitializedAsync();
    }
}