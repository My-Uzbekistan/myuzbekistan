@namespace Client.Core.Components
@inject IUFileService UFileService

@if (Files?.Count > 0)
{
    @if (Files.Any(f => f.Type == UFileTypes.Image))
    {
        <span @onclick="OpenDialog" style="cursor:pointer;display:inline-block;">
            <MudImage Fluid="true" Src="@(url + Files.First(f => f.Type == UFileTypes.Image).Path)" Height="50" Width="60" />
        </span>
    }
    else if (Files[0].Type == UFileTypes.File)
    {
        <MudButton @onclick="OpenDialog">Open Files</MudButton>
    }
}

<MudDialog @bind-Visible="visible" Options="dialogOptions" >
    <DialogContent>
        <MudCarousel Class="mud-width-full" Style="height:400px;max-width:700px;" ShowArrows="true" ShowBullets="true" AutoCycle="false" TData="object">
            <PreviousButtonTemplate>
                <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon" style="background: #cac0c099;">
                    <span class="mud-icon-button-label">
                        <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Filled.SkipPrevious" Color="@Color.Inherit" />
                    </span>
                </div>
            </PreviousButtonTemplate>
            <NextButtonTemplate>
                <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon" style="background: #cac0c099;">
                    <span class="mud-icon-button-label">
                        <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Filled.SkipNext" Color="@Color.Inherit" />
                    </span>
                </div>
            </NextButtonTemplate>
            <ChildContent>
                @if (Files != null)
                {
                    @foreach (var file in Files.Where(f => f.Type == UFileTypes.Image))
                    {
                        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Transparent">
                            <div class="d-flex justify-center align-center" style="height:100%">
                                <MudImage Fluid="true" Src="@(url + file.Path)" Style="max-height:380px; max-width:680px; object-fit:contain;" />
                            </div>
                        </MudCarouselItem>
                    }
                }
            </ChildContent>
        </MudCarousel>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Class="px-10">@L["Close"]</MudButton>
    </DialogActions>
</MudDialog>

<style>
    .mud-image {
        cursor: pointer;
    }

    .mud-carousel-arrow {
        color: #1976d2 !important;
        background: #fff !important;
        font-size: 2rem !important;
        opacity: 1 !important;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }
</style>

@code {

    [Parameter]
    public List<FileView>? Files { get; set; }

    string url = string.Empty;

    protected async override Task OnParametersSetAsync()
    {
        var urlTask = UFileService.GetFileUrl();
        url = await urlTask;
    }
    private bool visible;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;

    private DialogOptions dialogOptions = new() { FullWidth = true, NoHeader = true, MaxWidth= MaxWidth.Small };
}